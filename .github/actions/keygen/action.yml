name: "Keygen"
description: "Keygen"
inputs:
  version:
    description: "Version"
    required: true
  master-password:
    description: "Master password"
    required: true
outputs:
  public-key:
    description: "The public key"
    value: ${{ steps.run.outputs.public-key }}

runs:
  using: "composite"
  steps:
    - name: Determine binary
      id: bin
      shell: bash
      run: |
        set -euo pipefail
        ARCH="$(uname -m)"
        case "${{ runner.os }}" in
          Linux)
            FILENAME="$GITHUB_ACTION_PATH/keygen-linux"
            ;;
          Windows)
            FILENAME="$GITHUB_ACTION_PATH/keygen-windows"
            ;;
          macOS)
            if [ "$ARCH" = "arm64" ]; then
              FILENAME="$GITHUB_ACTION_PATH/keygen-macos-arm"
            else
              FILENAME="$GITHUB_ACTION_PATH/keygen-macos-x86"
            fi
            ;;
          *)
            echo "Unsupported OS: ${{ runner.os }}" >&2
            exit 1
            ;;
        esac
        echo "path=$FILENAME" >> "$GITHUB_OUTPUT"

    - name: Add executable bit to keygen (may not be necessary...)
      if: ${{ runner.os != 'Windows' }}
      shell: bash
      run: |
        set -euo pipefail
        chmod +x "${{ steps.bin.outputs.path }}"

    - name: Run keygen
      id: run
      shell: bash
      env:
        VERSION: ${{ inputs.version }}
        MASTER_PASSWORD: ${{ inputs['master-password'] }}
        BINARY: ${{ steps.bin.outputs.path }}
      run: |
        set -euo pipefail
        PUBLIC_KEY="$(
          printf '%s' "$MASTER_PASSWORD" | "$BINARY" -- "$VERSION"
        )"
        {
          echo 'public-key<<EOF'
          echo "$PUBLIC_KEY"
          echo 'EOF'
        } >> "$GITHUB_OUTPUT"
